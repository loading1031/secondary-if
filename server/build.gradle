plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.secondary-if'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// neo4j
	implementation 'org.neo4j.driver:neo4j-java-driver:5.12.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	// h2
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'com.h2database:h2'
	// mysql
	runtimeOnly 'mysql:mysql-connector-java:8.0.28'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive' // 비동기 방식의 Redis 사용 시

	/* JWT */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'commons-codec:commons-codec:1.13'
	implementation 'com.auth0:java-jwt:3.13.0'
	/* Swagger */
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'


}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}